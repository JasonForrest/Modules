//
//
//  Generated by StarUML(tm) C++ Add-In
//
//  @ Project : EditorInterface
//  @ File Name : qogrewidget.cpp
//  @ Date : 10.03.2013
//  @ Author : Sergei Forrest
//
//

#include "../include/qogrewidget.h"

namespace QtOgre
{
    QOgreWidget::QOgreWidget(Ogre::Root* ogreRoot)
        : QGLWidget()
        , ogreRoot(ogreRoot)
        , ogreRenderWindow(NULL)
	{
		std::string winXid = Ogre::StringConverter::toString((unsigned long)(this->winId()));
		Ogre::NameValuePairList params;
		params["parentWindowHandle"] = winXid;

		ogreRenderWindow = ogreRoot->createRenderWindow("QOgreWidget_RenderWindow",
														 this->width(),
														 this->height(),
														 false,
														 &params);

		ogreRenderWindow->setActive(true);
		ogreRenderWindow->setVisible(true);

		WId ogreWinId = 0x0;
		ogreRenderWindow->getCustomAttribute("WINDOW", &ogreWinId);
		assert(ogreWinId); // guaranteed to be valid due to the way it was created

		QWidget::create(ogreWinId);

		setAttribute(Qt::WA_OpaquePaintEvent); // qt won't bother updating the area under/behind the render window
	}
	
    QOgreWidget::~QOgreWidget()
	{
	
	}
	
	Ogre::RenderWindow* QOgreWidget::getOgreWindow()
	{
		assert(ogreRenderWindow); // guaranteed to be valid after construction
        return ogreRenderWindow;
	}
	
    void QOgreWidget::paintEvent(QPaintEvent* pEvent)
	{
		this->update();
	}
	
    void QOgreWidget::resizeEvent(QResizeEvent* rEvent)
	{
		if (rEvent)
		{
			QWidget::resizeEvent(rEvent);
		}

		if (ogreRenderWindow)
		{
			// since the underlying widget has already been updated we can source the resize values from there
			ogreRenderWindow->reposition(x(), y());
			ogreRenderWindow->resize(width(), height());
			ogreRenderWindow->windowMovedOrResized();
		}
	}
	
    void QOgreWidget::update()
	{
	    QWidget::update();
		ogreRoot->renderOneFrame(); 
	}
}
