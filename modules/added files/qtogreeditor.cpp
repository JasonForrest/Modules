//
//
//  Generated by StarUML(tm) C++ Add-In
//
//  @ Project : EditorInterface
//  @ File Name : qtogreeditor.cpp
//  @ Date : 10.03.2013
//  @ Author : Sergei Forrest
//
//

#include "../include/qtogreeditor.h"

namespace QtOgre
{
    QtOgreEditor::QtOgreEditor()
        : Ui::MainWindow()
        , ogreRoot(new Ogre::Root("plugins.cfg"))
	{
		// look for the openGL renderer in Ogre
		Ogre::RenderSystemList::const_iterator availableRendererIt = ogreRoot->getAvailableRenderers().begin();
		while(availableRendererIt != ogreRoot->getAvailableRenderers().end())
		{
			Ogre::String rName = (*availableRendererIt)->getName();
			if (rName == "OpenGL Rendering Subsystem")
			{
				break;
			}

			++availableRendererIt;
		}

		if (availableRendererIt == ogreRoot->getAvailableRenderers().end())
		{
			throw std::runtime_error("We were unable to find the OpenGL renderer in ogre's list, cannot continue");
		}

		// use the OpenGL renderer in the root config
		renderSystem = *availableRendererIt;
		ogreRoot->setRenderSystem(renderSystem);
		ogreRoot->initialise(false);

		ogreOGLWidget = new QOgreWidget(ogreRoot);
		ogreOGLWidget->setGeometry(0, 0, 800, 600);
		ogreOGLWidget->setMaximumSize(800, 600);
		mainWindowForm->workPlaceScrollArea->setWidget(ogreOGLWidget);
	
		sceneManager = ogreRoot->createSceneManager(Ogre::ST_EXTERIOR_CLOSE);
		mainCamera = sceneManager->createCamera("QOgreWidget_Cam");
		mainCamera->setPosition(1.0, 1.0, 200);

		ogreViewport = ogreOGLWidget->getOgreWindow()->addViewport(mainCamera);
		ogreViewport->setBackgroundColour(Ogre::ColourValue(0, 0, 0)); // make stuff green

		this->resize(800, 600);
		this->setWindowTitle("Most Basic Qt/Ogre Setup");

		this->show(); // give focus to our application and make it visible
	}
	
    QtOgreEditor::~QtOgreEditor()
	{
		delete ogreOGLWidget;
		delete ogreRoot;
	}
}
