//
//
//  Generated by StarUML(tm) C++ Add-In
//
//  @ Project : EditorInterface
//  @ File Name : qogrewidget.h
//  @ Date : 10.03.2013
//  @ Author : Sergei Forrest
//
//

#if !defined(_QOGREWIDGET_H)
#define _QOGREWIDGET_H

#include <QtOpenGL/QGLWidget>
#include <OGRE/Ogre.h>
#include <QtGui/qscrollarea.h>

namespace QtOgre
{
	/*class QOgreWidget : public QGLWidget
    {
        Q_OBJECT

	public:
        QOgreWidget(Ogre::Root* ogreRoot);
        ~QOgreWidget();

	private:
		QOgreWidget() {}

	public:
		//getters
		Ogre::RenderWindow* getOgreWindow();

    protected:
		virtual void paintEvent(QPaintEvent* pEvent);
		virtual void resizeEvent(QResizeEvent* rEvent);
		virtual void update();

    private:
		Ogre::RenderWindow* _ogreRenderWindow;
		Ogre::Root* _ogreRoot;
	};*/

class OgreWidget : public QGLWidget
{
  //Q_OBJECT;
 
 public:
  OgreWidget( QWidget *parent=0 ):
    QGLWidget( parent ),
    mOgreWindow(NULL)
    {
      init( "plugins.cfg", "ogre.cfg", "ogre.log" );
    }
 
  virtual ~OgreWidget()
    {
      mOgreRoot->shutdown();
      delete mOgreRoot;
      destroy();
    }
 
 protected:
  virtual void initializeGL();
  virtual void resizeGL( int, int );
  virtual void paintGL();
 
  void init( std::string, std::string, std::string );
 
  virtual Ogre::RenderSystem* chooseRenderer( Ogre::RenderSystemList* );
 
  Ogre::Root *mOgreRoot;
  Ogre::RenderWindow *mOgreWindow;
  Ogre::Camera *mCamera;
  Ogre::Viewport *mViewport;
  Ogre::SceneManager *mSceneMgr;
};
}

#endif  //_QOGREWIDGET_H
